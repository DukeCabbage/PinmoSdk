apply plugin: 'com.android.application'

android {
    compileSdkVersion versions.compileSdkVersion

    defaultConfig {
        applicationId "com.evilnut.pinmosdkdemo"
        minSdkVersion versions.demoMinSdkVersion
        targetSdkVersion versions.targetSdkVersion

        versionCode versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"
    }

    File propsFile = rootProject.file("keystore.properties")
    boolean localKeyStore = propsFile.exists()
    if (localKeyStore) {

        Properties properties = new Properties()
        properties.load(propsFile.newDataInputStream())

        signingConfigs {
            debug {
                storeFile = file(properties.getProperty("debugStoreFile"))
                storePassword = properties.getProperty("debugStorePassword")
                keyAlias = properties.getProperty("debugKeyAlias")
                keyPassword = properties.getProperty("debugKeyPassword")
            }
        }
    }

    buildTypes {
        debug {
            debuggable true

            if (localKeyStore) signingConfig signingConfigs.debug
        }

        release {
            debuggable true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            if (localKeyStore) signingConfig signingConfigs.debug
        }
    }
}

repositories {
    flatDir {
        dirs "libs"
    }
}

dependencies {
//    implementation(name: "lib-debug", ext: "aar")
    implementation(name: "lib-release", ext: "aar")

    implementation "com.android.support:design:${versions.support_library}"
    // Force resolution
    implementation "com.android.support:cardview-v7:${versions.support_library}"
    implementation "com.android.support:customtabs:${versions.support_library}"

    // ReactiveX
    implementation "io.reactivex.rxjava2:rxjava:${versions.rx_java2}"
    implementation "io.reactivex.rxjava2:rxandroid:${versions.rx_android2}"

    implementation("com.squareup.retrofit2:retrofit:${versions.retrofit2}") { exclude module: "okhttp" }
    implementation "com.squareup.retrofit2:adapter-rxjava2:${versions.retrofit2}"
    implementation "com.squareup.retrofit2:converter-gson:${versions.retrofit2}"

    implementation "com.squareup.okhttp3:okhttp:${versions.okhttp3}"
    implementation "com.squareup.okhttp3:logging-interceptor:${versions.okhttp3}"

    implementation "com.google.code.gson:gson:${versions.gson}"

    implementation "com.squareup.picasso:picasso:${versions.picasso}"

    implementation "com.jakewharton.timber:timber:${versions.timber}"

    implementation "com.tencent.mm.opensdk:wechat-sdk-android-without-mta:${versions.wechat_sdk}"

    implementation "com.facebook.android:facebook-share:${versions.facebook_sdk}"

    implementation "com.jakewharton:butterknife:${versions.butter_knife}"
    annotationProcessor "com.jakewharton:butterknife-compiler:${versions.butter_knife}"
}
